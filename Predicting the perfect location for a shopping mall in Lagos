{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## CAPSTONE PROJECT(BATTLE OF NEIGHBORHOODS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### BUSINESS PROBLEM: Building or opening a new shopping mall in Lagos, Nigeria"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The objective is to determine a suitable location to open a shopping mall based on the difeerent localities of Lagos, already established Shopping Malls in various geographical locations to be able to maximize revenue and reduce losses"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### DATA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### This project will use data from :\n",
    "\n",
    " Geopy - For getting the co-ordinates of different locations.\n",
    " Foursquare API - To get the list of venues and the details around a given location.\n",
    " Wikipedia - To get the Localities in Lagos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### METHODOLOGY "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Getting the co-ordinates of the city.\n",
    "2. Getting the list of neighborhoods and their co-ordinates.\n",
    "3. Exploring the most visited venues in the target localities.\n",
    "4. Clustering of the different localities.\n",
    "5. Analysis of  the clusters formed.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: geopy in /srv/conda/envs/notebook/lib/python3.7/site-packages (2.0.0)\n",
      "Requirement already satisfied: geographiclib<2,>=1.49 in /srv/conda/envs/notebook/lib/python3.7/site-packages (from geopy) (1.50)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install geopy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: lxml in /srv/conda/envs/notebook/lib/python3.7/site-packages (4.6.1)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install lxml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: BeautifulSoup4 in /srv/conda/envs/notebook/lib/python3.7/site-packages (4.9.3)\n",
      "Requirement already satisfied: soupsieve>1.2; python_version >= \"3.0\" in /srv/conda/envs/notebook/lib/python3.7/site-packages (from BeautifulSoup4) (2.0.1)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install BeautifulSoup4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "done\n"
     ]
    }
   ],
   "source": [
    "#Importing other required libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "from geopy.geocoders import Nominatim\n",
    "try:\n",
    "    import geocoder\n",
    "except:\n",
    "    !pip install geocoder\n",
    "    import geocoder\n",
    "\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "try:\n",
    "    import folium\n",
    "except:\n",
    "    !pip install folium\n",
    "    import folium\n",
    "    \n",
    "from sklearn.cluster import KMeans\n",
    "print ('done')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Getting the location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Latitude and Longitude of Lagos is 6.454700000000059 and 3.3887600000000475\n"
     ]
    }
   ],
   "source": [
    "g = geocoder.arcgis('Lagos, Nigeria')\n",
    "Lagos_lat = g.latlng[0]\n",
    "Lagos_lng = g.latlng[1]\n",
    "print(\"The Latitude and Longitude of Lagos is {} and {}\".format(Lagos_lat, Lagos_lng))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>LGA</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Alimosho</td>\n",
       "      <td>11456783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>2000346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Kosofe</td>\n",
       "      <td>665421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Mushin</td>\n",
       "      <td>633543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Oshodi-Isolo</td>\n",
       "      <td>10621789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>Ojo</td>\n",
       "      <td>598336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>Ikorodu</td>\n",
       "      <td>535811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>Surulere</td>\n",
       "      <td>504409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>Agege</td>\n",
       "      <td>461123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>Ifako-Ijaiye</td>\n",
       "      <td>428812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>Somolu</td>\n",
       "      <td>402992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>318576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>Lagos Mainland</td>\n",
       "      <td>317980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>Ikeja</td>\n",
       "      <td>313333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>Eti-Osa</td>\n",
       "      <td>287958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>Badagry</td>\n",
       "      <td>241437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>Apapa</td>\n",
       "      <td>217661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>Lagos Island</td>\n",
       "      <td>209665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>Epe</td>\n",
       "      <td>181715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>Ibeju-Lekki</td>\n",
       "      <td>117542</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank               LGA  Population\n",
       "0      1          Alimosho    11456783\n",
       "1      2  Ajeromi-Ifelodun     2000346\n",
       "2      3            Kosofe      665421\n",
       "3      4            Mushin      633543\n",
       "4      5      Oshodi-Isolo    10621789\n",
       "5      6               Ojo      598336\n",
       "6      7           Ikorodu      535811\n",
       "7      8          Surulere      504409\n",
       "8      9             Agege      461123\n",
       "9     10      Ifako-Ijaiye      428812\n",
       "10    11            Somolu      402992\n",
       "11    12      Amuwo-Odofin      318576\n",
       "12    13    Lagos Mainland      317980\n",
       "13    14             Ikeja      313333\n",
       "14    15           Eti-Osa      287958\n",
       "15    16           Badagry      241437\n",
       "16    17             Apapa      217661\n",
       "17    18      Lagos Island      209665\n",
       "18    19               Epe      181715\n",
       "19    20       Ibeju-Lekki      117542"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#scraping the table from wikipedia\n",
    "df = pd.read_html('https://en.wikipedia.org/wiki/List_of_Lagos_State_local_government_areas_by_population')[2]\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20, 3)"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "60"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>Locality</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Alimosho</td>\n",
       "      <td>11456783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>2000346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Kosofe</td>\n",
       "      <td>665421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Mushin</td>\n",
       "      <td>633543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Oshodi-Isolo</td>\n",
       "      <td>10621789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>Ojo</td>\n",
       "      <td>598336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>Ikorodu</td>\n",
       "      <td>535811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>Surulere</td>\n",
       "      <td>504409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>Agege</td>\n",
       "      <td>461123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>Ifako-Ijaiye</td>\n",
       "      <td>428812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>Somolu</td>\n",
       "      <td>402992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>318576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>Lagos Mainland</td>\n",
       "      <td>317980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>Ikeja</td>\n",
       "      <td>313333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>Eti-Osa</td>\n",
       "      <td>287958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>Badagry</td>\n",
       "      <td>241437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>Apapa</td>\n",
       "      <td>217661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>Lagos Island</td>\n",
       "      <td>209665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>Epe</td>\n",
       "      <td>181715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>Ibeju-Lekki</td>\n",
       "      <td>117542</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank          Locality  Population\n",
       "0      1          Alimosho    11456783\n",
       "1      2  Ajeromi-Ifelodun     2000346\n",
       "2      3            Kosofe      665421\n",
       "3      4            Mushin      633543\n",
       "4      5      Oshodi-Isolo    10621789\n",
       "5      6               Ojo      598336\n",
       "6      7           Ikorodu      535811\n",
       "7      8          Surulere      504409\n",
       "8      9             Agege      461123\n",
       "9     10      Ifako-Ijaiye      428812\n",
       "10    11            Somolu      402992\n",
       "11    12      Amuwo-Odofin      318576\n",
       "12    13    Lagos Mainland      317980\n",
       "13    14             Ikeja      313333\n",
       "14    15           Eti-Osa      287958\n",
       "15    16           Badagry      241437\n",
       "16    17             Apapa      217661\n",
       "17    18      Lagos Island      209665\n",
       "18    19               Epe      181715\n",
       "19    20       Ibeju-Lekki      117542"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#renaming LGA to Locality\n",
    "df.rename(columns = {'LGA': 'Locality'}, inplace = True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alimosho</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Kosofe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mushin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Oshodi-Isolo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Ojo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Ikorodu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Surulere</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Agege</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Ifako-Ijaiye</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Somolu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Lagos Mainland</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Ikeja</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Eti-Osa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Badagry</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Apapa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Lagos Island</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Epe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Ibeju-Lekki</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Locality\n",
       "0           Alimosho\n",
       "1   Ajeromi-Ifelodun\n",
       "2             Kosofe\n",
       "3             Mushin\n",
       "4       Oshodi-Isolo\n",
       "5                Ojo\n",
       "6            Ikorodu\n",
       "7           Surulere\n",
       "8              Agege\n",
       "9       Ifako-Ijaiye\n",
       "10            Somolu\n",
       "11      Amuwo-Odofin\n",
       "12    Lagos Mainland\n",
       "13             Ikeja\n",
       "14           Eti-Osa\n",
       "15           Badagry\n",
       "16             Apapa\n",
       "17      Lagos Island\n",
       "18               Epe\n",
       "19       Ibeju-Lekki"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dropping the Rank and Population columns\n",
    "df.drop(columns = ['Rank', 'Population'], axis = 1, inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20, 1)"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#shape of dataframe\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Defining a function to get the location of the localities\n",
    "def get_location(localities):\n",
    "    g = geocoder.arcgis('{}, Lagos, Nigeria'.format(localities))\n",
    "    get_latlng = g.latlng\n",
    "    return get_latlng\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Defining a function to get the location of the localities\n",
    "def get_location(localities):\n",
    "    g = geocoder.arcgis('{}, Lagos, Nigeria'.format(localities))\n",
    "    get_latlng = g.latlng\n",
    "    return get_latlng"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[6.609270000000038, 3.255800000000022], [6.459410000000048, 3.3405500000000643], [6.599990000000048, 3.4150900000000206], [6.53174000000007, 3.3470100000000684], [6.521350000000041, 3.3186300000000415], [6.462620000000072, 3.166960000000074], [6.6235600000000545, 3.5048300000000268], [6.489320000000021, 3.358000000000061], [6.6256100000000515, 3.312620000000038], [6.651110000000074, 3.3232900000000427], [6.537850000000049, 3.385340000000042], [6.445430000000044, 3.2675400000000536], [6.506430000000023, 3.375530000000026], [6.607760000000042, 3.348540000000071], [6.4666800000000535, 3.5832600000000525], [6.432160000000067, 2.89265000000006], [6.437950000000058, 3.3643600000000333], [6.454700000000059, 3.3887600000000475], [6.583750000000066, 3.975530000000049], [6.5036700000000565, 3.7330100000000357]]\n"
     ]
    }
   ],
   "source": [
    "co_ordinates = []\n",
    "for i in df[\"Locality\"].tolist():\n",
    "    co_ordinates.append(get_location(i))\n",
    "print(co_ordinates)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Creating a dataframe from the list of location\n",
    "co_ordinates_df = pd.DataFrame(co_ordinates, columns=['Latitudes', 'Longitudes'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Adding the coordinates to the dataframe\n",
    "df[\"Latitudes\"] = co_ordinates_df[\"Latitudes\"]\n",
    "df[\"Longitudes\"] = co_ordinates_df[\"Longitudes\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Latitudes</th>\n",
       "      <th>Longitudes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>6.45941</td>\n",
       "      <td>3.34055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Kosofe</td>\n",
       "      <td>6.59999</td>\n",
       "      <td>3.41509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mushin</td>\n",
       "      <td>6.53174</td>\n",
       "      <td>3.34701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Oshodi-Isolo</td>\n",
       "      <td>6.52135</td>\n",
       "      <td>3.31863</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  Latitudes  Longitudes\n",
       "0          Alimosho    6.60927     3.25580\n",
       "1  Ajeromi-Ifelodun    6.45941     3.34055\n",
       "2            Kosofe    6.59999     3.41509\n",
       "3            Mushin    6.53174     3.34701\n",
       "4      Oshodi-Isolo    6.52135     3.31863"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting the localities on a map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7fb8a0d60b90>"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Creating a map\n",
    "Lagos_map = folium.Map(location=[Lagos_lat, Lagos_lng],zoom_start=11)\n",
    "\n",
    "#adding markers to the map for localities\n",
    "#marker for Bangalore\n",
    "folium.Marker([Lagos_lat, Lagos_lng], popup='<i>Lgos</i>', color='red', tooltip=\"Click to see\").add_to(Lagos_map)\n",
    "\n",
    "#markers for localities\n",
    "for latitude,longitude,name in zip(df[\"Latitudes\"], df[\"Longitudes\"], df[\"Locality\"]):\n",
    "    folium.CircleMarker(\n",
    "        [latitude, longitude],\n",
    "        radius=6,\n",
    "        color='blue',\n",
    "        popup=name,\n",
    "        fill=True,\n",
    "        fill_color='#3186ff'\n",
    "    ).add_to(Lagos_map)\n",
    "\n",
    "Lagos_map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using Foursquare API to explore the different localities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: CLIENT_ID\n",
      "CLIENT_SECRET:CLIENT_SECRET\n"
     ]
    }
   ],
   "source": [
    "#Foursquare Credentials\n",
    "# @hidden_cell\n",
    "CLIENT_ID = 'JTB4R2ZERJU1QIVN1L4DXTEHZZS3ALDRVPDITI5KSV45D0DG'\n",
    "CLIENT_SECRET = 'ICQ5C1WJOIFWHALH01K3XKDN4UFX3Q5PT3I4ZBNVW3P1SVKD'\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + \"CLIENT_ID\")\n",
    "print('CLIENT_SECRET:' + \"CLIENT_SECRET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Getting the top 100 venues in each locality\n",
    "radius = 2000\n",
    "LIMIT = 100\n",
    "\n",
    "venues = []\n",
    "\n",
    "for lat, lng, locality in zip(df[\"Latitudes\"], df[\"Longitudes\"], df[\"Locality\"]):\n",
    "    url = 'https://api.foursquare.com/v2/venues/explore?client_id={}&client_secret={}&ll={},{}&v={}&radius={}&limit={}'.format(CLIENT_ID, CLIENT_SECRET, lat, lng, VERSION, radius, LIMIT)\n",
    "    results = requests.get(url).json()['response']['groups'][0]['items']\n",
    "\n",
    "    for venue in results:\n",
    "        venues.append((locality, lat, lng, venue['venue']['name'], venue['venue']['location']['lat'], venue['venue']['location']['lng'], venue['venue']['categories'][0]['name']))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('Alimosho',\n",
       " 6.609270000000038,\n",
       " 3.255800000000022,\n",
       " 'Ipaja market ipaja',\n",
       " 6.602248491329565,\n",
       " 3.2555854768399923,\n",
       " 'Market')"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "venues[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Venue name</th>\n",
       "      <th>Venue Lat</th>\n",
       "      <th>Venue Lng</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "      <td>Ipaja market ipaja</td>\n",
       "      <td>6.602248</td>\n",
       "      <td>3.255585</td>\n",
       "      <td>Market</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "      <td>De Grange suites &amp; bar</td>\n",
       "      <td>6.602309</td>\n",
       "      <td>3.267038</td>\n",
       "      <td>Bar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "      <td>Baruwa</td>\n",
       "      <td>6.602284</td>\n",
       "      <td>3.267039</td>\n",
       "      <td>Bus Station</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "      <td>mm international airport terminal d lagos nige...</td>\n",
       "      <td>6.598807</td>\n",
       "      <td>3.267039</td>\n",
       "      <td>Airport</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>6.45941</td>\n",
       "      <td>3.34055</td>\n",
       "      <td>Food step</td>\n",
       "      <td>6.463992</td>\n",
       "      <td>3.345732</td>\n",
       "      <td>Food Truck</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  Latitude  Longitude  \\\n",
       "0          Alimosho   6.60927    3.25580   \n",
       "1          Alimosho   6.60927    3.25580   \n",
       "2          Alimosho   6.60927    3.25580   \n",
       "3          Alimosho   6.60927    3.25580   \n",
       "4  Ajeromi-Ifelodun   6.45941    3.34055   \n",
       "\n",
       "                                          Venue name  Venue Lat  Venue Lng  \\\n",
       "0                                 Ipaja market ipaja   6.602248   3.255585   \n",
       "1                             De Grange suites & bar   6.602309   3.267038   \n",
       "2                                             Baruwa   6.602284   3.267039   \n",
       "3  mm international airport terminal d lagos nige...   6.598807   3.267039   \n",
       "4                                          Food step   6.463992   3.345732   \n",
       "\n",
       "  Venue Category  \n",
       "0         Market  \n",
       "1            Bar  \n",
       "2    Bus Station  \n",
       "3        Airport  \n",
       "4     Food Truck  "
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Convert the venue list into dataframe\n",
    "venues_df = pd.DataFrame(venues)\n",
    "venues_df.columns = ['Locality', 'Latitude', 'Longitude', 'Venue name', 'Venue Lat', 'Venue Lng', 'Venue Category']\n",
    "venues_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Venue name</th>\n",
       "      <th>Venue Lat</th>\n",
       "      <th>Venue Lng</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Locality</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Agege</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ajeromi-Ifelodun</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alimosho</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Amuwo-Odofin</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Apapa</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Badagry</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Epe</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Eti-Osa</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ifako-Ijaiye</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ikeja</th>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ikorodu</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kosofe</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lagos Island</th>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lagos Mainland</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mushin</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ojo</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oshodi-Isolo</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Somolu</th>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Surulere</th>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Latitude  Longitude  Venue name  Venue Lat  Venue Lng  \\\n",
       "Locality                                                                  \n",
       "Agege                    8          8           8          8          8   \n",
       "Ajeromi-Ifelodun         5          5           5          5          5   \n",
       "Alimosho                 4          4           4          4          4   \n",
       "Amuwo-Odofin             4          4           4          4          4   \n",
       "Apapa                    7          7           7          7          7   \n",
       "Badagry                  4          4           4          4          4   \n",
       "Epe                      1          1           1          1          1   \n",
       "Eti-Osa                  7          7           7          7          7   \n",
       "Ifako-Ijaiye             5          5           5          5          5   \n",
       "Ikeja                   42         42          42         42         42   \n",
       "Ikorodu                  9          9           9          9          9   \n",
       "Kosofe                   4          4           4          4          4   \n",
       "Lagos Island            27         27          27         27         27   \n",
       "Lagos Mainland          24         24          24         24         24   \n",
       "Mushin                   4          4           4          4          4   \n",
       "Ojo                      4          4           4          4          4   \n",
       "Oshodi-Isolo             5          5           5          5          5   \n",
       "Somolu                  14         14          14         14         14   \n",
       "Surulere                25         25          25         25         25   \n",
       "\n",
       "                  Venue Category  \n",
       "Locality                          \n",
       "Agege                          8  \n",
       "Ajeromi-Ifelodun               5  \n",
       "Alimosho                       4  \n",
       "Amuwo-Odofin                   4  \n",
       "Apapa                          7  \n",
       "Badagry                        4  \n",
       "Epe                            1  \n",
       "Eti-Osa                        7  \n",
       "Ifako-Ijaiye                   5  \n",
       "Ikeja                         42  \n",
       "Ikorodu                        9  \n",
       "Kosofe                         4  \n",
       "Lagos Island                  27  \n",
       "Lagos Mainland                24  \n",
       "Mushin                         4  \n",
       "Ojo                            4  \n",
       "Oshodi-Isolo                   5  \n",
       "Somolu                        14  \n",
       "Surulere                      25  "
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Number of venues for each Locality\n",
    "venues_df.groupby(['Locality']).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 203 unique categries.\n"
     ]
    }
   ],
   "source": [
    "#Getting the unique categories\n",
    "print('There are {} unique categries.'.format(len(venues_df['Venue Category'])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total number of unique catefories are 82\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['Market',\n",
       " 'Bar',\n",
       " 'Bus Station',\n",
       " 'Airport',\n",
       " 'Food Truck',\n",
       " 'Lake',\n",
       " 'Bus Stop',\n",
       " 'Metro Station',\n",
       " 'Burger Joint',\n",
       " 'Steakhouse',\n",
       " 'Flea Market',\n",
       " 'Vineyard',\n",
       " 'Department Store',\n",
       " 'Diner',\n",
       " 'Wine Shop',\n",
       " 'Fast Food Restaurant',\n",
       " 'Food',\n",
       " 'Hotel',\n",
       " 'Stadium',\n",
       " 'Park',\n",
       " 'African Restaurant',\n",
       " 'Café',\n",
       " 'Historic Site',\n",
       " 'Electronics Store',\n",
       " 'Auto Workshop',\n",
       " 'Bank',\n",
       " 'Multiplex',\n",
       " 'Movie Theater',\n",
       " 'Shopping Mall',\n",
       " 'Clothing Store',\n",
       " 'Pizza Place',\n",
       " 'Art Gallery',\n",
       " 'Fried Chicken Joint',\n",
       " 'Soccer Field',\n",
       " 'Jewelry Store',\n",
       " 'BBQ Joint',\n",
       " 'Bike Rental / Bike Share',\n",
       " 'Fish Market',\n",
       " 'Noodle House',\n",
       " 'Campground',\n",
       " 'Gym',\n",
       " 'Light Rail Station',\n",
       " 'Grocery Store',\n",
       " 'Beer Garden',\n",
       " 'IT Services',\n",
       " 'Arts & Entertainment',\n",
       " 'Convenience Store',\n",
       " 'Boat or Ferry',\n",
       " 'Lounge',\n",
       " 'Harbor / Marina',\n",
       " 'Nightclub',\n",
       " 'Cupcake Shop',\n",
       " 'Bagel Shop',\n",
       " 'Bakery',\n",
       " 'Optical Shop',\n",
       " 'Basketball Court',\n",
       " 'German Restaurant',\n",
       " 'Boutique',\n",
       " 'Pharmacy',\n",
       " 'Chinese Restaurant',\n",
       " 'Ice Cream Shop',\n",
       " 'Coffee Shop',\n",
       " 'Soup Place',\n",
       " 'Performing Arts Venue',\n",
       " 'Seafood Restaurant',\n",
       " 'Plaza',\n",
       " 'Indian Restaurant',\n",
       " 'Mobile Phone Shop',\n",
       " 'Hotel Pool',\n",
       " 'Liquor Store',\n",
       " 'Breakfast Spot',\n",
       " 'Trail',\n",
       " 'Sushi Restaurant',\n",
       " 'Salon / Barbershop',\n",
       " 'Museum',\n",
       " 'Playground',\n",
       " 'Photography Studio',\n",
       " 'Baseball Stadium',\n",
       " 'Convention Center',\n",
       " 'Cricket Ground',\n",
       " 'Automotive Shop',\n",
       " 'Train Station']"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#List of categories\n",
    "print('Total number of unique catefories are {}'.format(len(venues_df['Venue Category'].unique().tolist())))\n",
    "#First 10 categories\n",
    "venues_df['Venue Category'].unique().tolist()#[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Analyzing the Localities according to the venues"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>African Restaurant</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>Arts &amp; Entertainment</th>\n",
       "      <th>Auto Workshop</th>\n",
       "      <th>Automotive Shop</th>\n",
       "      <th>BBQ Joint</th>\n",
       "      <th>Bagel Shop</th>\n",
       "      <th>Bakery</th>\n",
       "      <th>...</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Soccer Field</th>\n",
       "      <th>Soup Place</th>\n",
       "      <th>Stadium</th>\n",
       "      <th>Steakhouse</th>\n",
       "      <th>Sushi Restaurant</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Vineyard</th>\n",
       "      <th>Wine Shop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 83 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  African Restaurant  Airport  Art Gallery  \\\n",
       "0          Alimosho                   0        0            0   \n",
       "1          Alimosho                   0        0            0   \n",
       "2          Alimosho                   0        0            0   \n",
       "3          Alimosho                   0        1            0   \n",
       "4  Ajeromi-Ifelodun                   0        0            0   \n",
       "\n",
       "   Arts & Entertainment  Auto Workshop  Automotive Shop  BBQ Joint  \\\n",
       "0                     0              0                0          0   \n",
       "1                     0              0                0          0   \n",
       "2                     0              0                0          0   \n",
       "3                     0              0                0          0   \n",
       "4                     0              0                0          0   \n",
       "\n",
       "   Bagel Shop  Bakery  ...  Shopping Mall  Soccer Field  Soup Place  Stadium  \\\n",
       "0           0       0  ...              0             0           0        0   \n",
       "1           0       0  ...              0             0           0        0   \n",
       "2           0       0  ...              0             0           0        0   \n",
       "3           0       0  ...              0             0           0        0   \n",
       "4           0       0  ...              0             0           0        0   \n",
       "\n",
       "   Steakhouse  Sushi Restaurant  Trail  Train Station  Vineyard  Wine Shop  \n",
       "0           0                 0      0              0         0          0  \n",
       "1           0                 0      0              0         0          0  \n",
       "2           0                 0      0              0         0          0  \n",
       "3           0                 0      0              0         0          0  \n",
       "4           0                 0      0              0         0          0  \n",
       "\n",
       "[5 rows x 83 columns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#one hot encoding\n",
    "Lagos_onehot = pd.get_dummies(venues_df[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n",
    "\n",
    "Lagos_onehot['L'] = venues_df['Locality']\n",
    "\n",
    "#move the locality column to the front\n",
    "Lagos_onehot = blr_onehot[ [ 'Locality' ] + [ col for col in blr_onehot.columns if col!='Locality' ] ]\n",
    "Lagos_onehot.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Grouping the categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(19, 83)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>African Restaurant</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>Arts &amp; Entertainment</th>\n",
       "      <th>Auto Workshop</th>\n",
       "      <th>Automotive Shop</th>\n",
       "      <th>BBQ Joint</th>\n",
       "      <th>Bagel Shop</th>\n",
       "      <th>Bakery</th>\n",
       "      <th>...</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Soccer Field</th>\n",
       "      <th>Soup Place</th>\n",
       "      <th>Stadium</th>\n",
       "      <th>Steakhouse</th>\n",
       "      <th>Sushi Restaurant</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Vineyard</th>\n",
       "      <th>Wine Shop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agege</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apapa</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 83 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  African Restaurant  Airport  Art Gallery  \\\n",
       "0             Agege                 0.0     0.00          0.0   \n",
       "1  Ajeromi-Ifelodun                 0.0     0.00          0.0   \n",
       "2          Alimosho                 0.0     0.25          0.0   \n",
       "3      Amuwo-Odofin                 0.0     0.00          0.0   \n",
       "4             Apapa                 0.0     0.00          0.0   \n",
       "\n",
       "   Arts & Entertainment  Auto Workshop  Automotive Shop  BBQ Joint  \\\n",
       "0                   0.0            0.0              0.0        0.0   \n",
       "1                   0.0            0.0              0.0        0.0   \n",
       "2                   0.0            0.0              0.0        0.0   \n",
       "3                   0.0            0.0              0.0        0.0   \n",
       "4                   0.0            0.0              0.0        0.0   \n",
       "\n",
       "   Bagel Shop  Bakery  ...  Shopping Mall  Soccer Field  Soup Place  Stadium  \\\n",
       "0         0.0     0.0  ...       0.000000           0.0         0.0      0.0   \n",
       "1         0.0     0.0  ...       0.000000           0.0         0.0      0.0   \n",
       "2         0.0     0.0  ...       0.000000           0.0         0.0      0.0   \n",
       "3         0.0     0.0  ...       0.000000           0.0         0.0      0.0   \n",
       "4         0.0     0.0  ...       0.142857           0.0         0.0      0.0   \n",
       "\n",
       "   Steakhouse  Sushi Restaurant  Trail  Train Station  Vineyard  Wine Shop  \n",
       "0         0.0               0.0    0.0            0.0       0.0        0.0  \n",
       "1         0.0               0.0    0.0            0.0       0.0        0.0  \n",
       "2         0.0               0.0    0.0            0.0       0.0        0.0  \n",
       "3         0.0               0.0    0.0            0.0       0.0        0.0  \n",
       "4         0.0               0.0    0.0            0.0       0.0        0.0  \n",
       "\n",
       "[5 rows x 83 columns]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Lagos_grouped = blr_onehot.groupby(['Locality']).mean().reset_index()\n",
    "print(Lagos_grouped.shape)\n",
    "Lagos_grouped.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#numbers of localities having Shopping malls\n",
    "len(Lagos_grouped[Lagos_grouped['Shopping Mall'] > 0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dataframe for shopping mall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agege</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apapa</td>\n",
       "      <td>0.142857</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  Shopping Mall\n",
       "0             Agege       0.000000\n",
       "1  Ajeromi-Ifelodun       0.000000\n",
       "2          Alimosho       0.000000\n",
       "3      Amuwo-Odofin       0.000000\n",
       "4             Apapa       0.142857"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Shopping_mall = Lagos_grouped[['Locality', 'Shopping Mall']]\n",
    "Shopping_mall.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 0 0 0 1 0 0 0 0 2]\n"
     ]
    }
   ],
   "source": [
    "#K-means clustering\n",
    "cluster = 3 \n",
    "\n",
    "#Dataframe for clustering\n",
    "Lagos_clustering = Shopping_mall.drop(['Locality'], 1)\n",
    "\n",
    "#run K-means clustering\n",
    "k_means = KMeans(init=\"k-means++\", n_clusters=cluster, n_init=12).fit(Lagos_clustering)\n",
    "\n",
    "#getting the labels for first 10 localities\n",
    "print(k_means.labels_[0:10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Cluster Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agege</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apapa</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  Shopping Mall  Cluster Label\n",
       "0             Agege       0.000000              0\n",
       "1  Ajeromi-Ifelodun       0.000000              0\n",
       "2          Alimosho       0.000000              0\n",
       "3      Amuwo-Odofin       0.000000              0\n",
       "4             Apapa       0.142857              1"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Creating a dataframe\n",
    "Lagos_labels = Shopping_mall.copy()\n",
    "\n",
    "#adding labels\n",
    "Lagos_labels[\"Cluster Label\"] = k_means.labels_\n",
    "\n",
    "Lagos_labels.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Cluster Label</th>\n",
       "      <th>Latitudes</th>\n",
       "      <th>Longitudes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agege</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>6.62561</td>\n",
       "      <td>3.31262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>6.45941</td>\n",
       "      <td>3.34055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>6.44543</td>\n",
       "      <td>3.26754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apapa</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>1</td>\n",
       "      <td>6.43795</td>\n",
       "      <td>3.36436</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Locality  Shopping Mall  Cluster Label  Latitudes  Longitudes\n",
       "0             Agege       0.000000              0    6.62561     3.31262\n",
       "1  Ajeromi-Ifelodun       0.000000              0    6.45941     3.34055\n",
       "2          Alimosho       0.000000              0    6.60927     3.25580\n",
       "3      Amuwo-Odofin       0.000000              0    6.44543     3.26754\n",
       "4             Apapa       0.142857              1    6.43795     3.36436"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Merging the Lagos_labels and first dataframe(df) to get the latitude and longitudes for each locality\n",
    "Lagos_labels = Lagos_labels.join(df.set_index('Locality'), on='Locality')\n",
    "Lagos_labels.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Cluster Label</th>\n",
       "      <th>Latitudes</th>\n",
       "      <th>Longitudes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agege</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.62561</td>\n",
       "      <td>3.31262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.45941</td>\n",
       "      <td>3.34055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.44543</td>\n",
       "      <td>3.26754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Oshodi-Isolo</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.52135</td>\n",
       "      <td>3.31863</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Locality  Shopping Mall  Cluster Label  Latitudes  Longitudes\n",
       "0              Agege            0.0              0    6.62561     3.31262\n",
       "1   Ajeromi-Ifelodun            0.0              0    6.45941     3.34055\n",
       "2           Alimosho            0.0              0    6.60927     3.25580\n",
       "3       Amuwo-Odofin            0.0              0    6.44543     3.26754\n",
       "16      Oshodi-Isolo            0.0              0    6.52135     3.31863"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Grouping the localities according to their Cluster Labels\n",
    "Lagos_labels.sort_values([\"Cluster Label\"], inplace=True)\n",
    "Lagos_labels.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7fb8a0ce9290>"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Plot the cluster on map\n",
    "cluster_map = folium.Map(location=[Lagos_lat, Lagos_lng], zoom_start = 10)\n",
    "\n",
    "#marker for Bangalore\n",
    "folium.Marker([Lagos_lat, Lagos_lng], popup='<i>Lagos</i>', color='blue', tooltip=\"Click to see\").add_to(cluster_map)\n",
    "\n",
    "#Getting the colors for the clusters\n",
    "col = ['red', 'green', 'blue']\n",
    "\n",
    "#markers for localities\n",
    "for latitude,longitude,name,clus in zip(Lagos_labels[\"Latitudes\"], Lagos_labels[\"Longitudes\"], Lagos_labels[\"Locality\"], Lagos_labels[\"Cluster Label\"]):\n",
    "    label = folium.Popup(name + ' - Cluster ' + str(clus))\n",
    "    folium.CircleMarker(\n",
    "        [latitude, longitude],\n",
    "        radius=6,\n",
    "        color=col[clus],\n",
    "        popup=label,\n",
    "        fill=False,\n",
    "        fill_color=col[clus],\n",
    "        fill_opacity=0.3\n",
    "    ).add_to(cluster_map)\n",
    "       \n",
    "cluster_map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Analysing the cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 14 localities in cluster-1\n",
      "The mean occurence of Shopping Mall in cluster-1 is 0.00\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Cluster Label</th>\n",
       "      <th>Latitudes</th>\n",
       "      <th>Longitudes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Agege</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.62561</td>\n",
       "      <td>3.31262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ajeromi-Ifelodun</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.45941</td>\n",
       "      <td>3.34055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alimosho</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.60927</td>\n",
       "      <td>3.25580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Amuwo-Odofin</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.44543</td>\n",
       "      <td>3.26754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Oshodi-Isolo</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.52135</td>\n",
       "      <td>3.31863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Badagry</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.43216</td>\n",
       "      <td>2.89265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Epe</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.58375</td>\n",
       "      <td>3.97553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Eti-Osa</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.46668</td>\n",
       "      <td>3.58326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Ifako-Ijaiye</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.65111</td>\n",
       "      <td>3.32329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Somolu</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.53785</td>\n",
       "      <td>3.38534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Ikorodu</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.62356</td>\n",
       "      <td>3.50483</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Kosofe</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.59999</td>\n",
       "      <td>3.41509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Ojo</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.46262</td>\n",
       "      <td>3.16696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Mushin</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.53174</td>\n",
       "      <td>3.34701</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Locality  Shopping Mall  Cluster Label  Latitudes  Longitudes\n",
       "0              Agege            0.0              0    6.62561     3.31262\n",
       "1   Ajeromi-Ifelodun            0.0              0    6.45941     3.34055\n",
       "2           Alimosho            0.0              0    6.60927     3.25580\n",
       "3       Amuwo-Odofin            0.0              0    6.44543     3.26754\n",
       "16      Oshodi-Isolo            0.0              0    6.52135     3.31863\n",
       "5            Badagry            0.0              0    6.43216     2.89265\n",
       "6                Epe            0.0              0    6.58375     3.97553\n",
       "7            Eti-Osa            0.0              0    6.46668     3.58326\n",
       "8       Ifako-Ijaiye            0.0              0    6.65111     3.32329\n",
       "17            Somolu            0.0              0    6.53785     3.38534\n",
       "10           Ikorodu            0.0              0    6.62356     3.50483\n",
       "11            Kosofe            0.0              0    6.59999     3.41509\n",
       "15               Ojo            0.0              0    6.46262     3.16696\n",
       "14            Mushin            0.0              0    6.53174     3.34701"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#First Cluster\n",
    "cluster_1 = Lagos_labels[Lagos_labels['Cluster Label'] == 0]\n",
    "print(\"There are {} localities in cluster-1\".format(cluster_1.shape[0]))\n",
    "mean_presence_1 = cluster_1['Shopping Mall'].mean()\n",
    "print(\"The mean occurence of Shopping Mall in cluster-1 is {0:.2f}\".format(mean_presence_1))\n",
    "cluster_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 2 localities in cluster-2\n",
      "The mean occurence of Shopping Mall in cluster-2 is 0.13\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Cluster Label</th>\n",
       "      <th>Latitudes</th>\n",
       "      <th>Longitudes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Surulere</td>\n",
       "      <td>0.120000</td>\n",
       "      <td>1</td>\n",
       "      <td>6.48932</td>\n",
       "      <td>3.35800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apapa</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>1</td>\n",
       "      <td>6.43795</td>\n",
       "      <td>3.36436</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Locality  Shopping Mall  Cluster Label  Latitudes  Longitudes\n",
       "18  Surulere       0.120000              1    6.48932     3.35800\n",
       "4      Apapa       0.142857              1    6.43795     3.36436"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Second Cluster\n",
    "cluster_2 = Lagos_labels[Lagos_labels['Cluster Label'] == 1]\n",
    "print(\"There are {} localities in cluster-2\".format(cluster_2.shape[0]))\n",
    "mean_presence_2 = cluster_2['Shopping Mall'].mean()\n",
    "print(\"The mean occurence of Shopping Mall in cluster-2 is {0:.2f}\".format(mean_presence_2))\n",
    "cluster_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 3 localities in cluster-3\n",
      "The mean occurence of Shoppimg Mall in cluster-3 is 0.05\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Locality</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Cluster Label</th>\n",
       "      <th>Latitudes</th>\n",
       "      <th>Longitudes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Lagos Island</td>\n",
       "      <td>0.037037</td>\n",
       "      <td>2</td>\n",
       "      <td>6.45470</td>\n",
       "      <td>3.38876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Lagos Mainland</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>2</td>\n",
       "      <td>6.50643</td>\n",
       "      <td>3.37553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Ikeja</td>\n",
       "      <td>0.071429</td>\n",
       "      <td>2</td>\n",
       "      <td>6.60776</td>\n",
       "      <td>3.34854</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Locality  Shopping Mall  Cluster Label  Latitudes  Longitudes\n",
       "12    Lagos Island       0.037037              2    6.45470     3.38876\n",
       "13  Lagos Mainland       0.041667              2    6.50643     3.37553\n",
       "9            Ikeja       0.071429              2    6.60776     3.34854"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Third Cluster\n",
    "cluster_3 = Lagos_labels[Lagos_labels['Cluster Label'] == 2]\n",
    "print(\"There are {} localities in cluster-3\".format(cluster_3.shape[0]))\n",
    "mean_presence_3 = cluster_3['Shopping Mall'].mean()\n",
    "print(\"The mean occurence of Shoppimg Mall in cluster-3 is {0:.2f}\".format(mean_presence_3))\n",
    "cluster_3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CONCLUSION\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### From, the above analyisis, we can see that Clustrer 1 with red color has the highest number of shopping malls while cluster 2 and 3 with colors green and blue respectively have less numbers. \n",
    "### This analysis gives an insight to potential entrepreneurs on the perfect localities to open a shopping mall. As seen Cluster 1 already has a hugh competition, so the perfect areas would be those in Clusters 2 and 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
